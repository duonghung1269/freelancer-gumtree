# initialize root logger with level ERROR for stdout and fout
log4j.rootLogger=ERROR,stdout,fout
# set the log level for these components
log4j.logger.com.gumtreescraper.gui=ERROR

# add a ConsoleAppender to the logger stdout to write to the console
log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.ConversionPattern=%m%n

# add a FileAppender to the logger fout
log4j.appender.fout=org.apache.log4j.FileAppender
# create a log file
#log4j.appender.fout.File=gumtree.log
log4j.appender.fout.File=D:/gumtreescraper/gumtree.log
log4j.appender.fout.layout=org.apache.log4j.PatternLayout
# use a more detailed message pattern
log4j.appender.fout.layout.ConversionPattern=%p\t%d{ISO8601}\t%r\t%c\t[%t]\t%m%n


## Define the root logger with appender file
#log4j.rootLogger = ERROR, FILE
#
##log4j.appender.stdout=org.apache.log4j.ConsoleAppender
##log4j.appender.stdout.Target=System.out
##log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
##log4j.appender.stdout.layout.ConversionPattern=%d{yy/MM/dd HH:mm:ss} %p %c{2}: %m%n
#
## Define the file appender
#log4j.appender.FILE=org.apache.log4j.DailyRollingFileAppender
#
## Set the name of the file
#log4j.appender.FILE.File=./gumtree_log2.log
#
## Set the immediate flush to true (default)
#log4j.appender.FILE.ImmediateFlush=true
#
## Set the threshold to debug mode
#log4j.appender.FILE.Threshold=debug
#
## Set the append to false, should not overwrite
#log4j.appender.FILE.Append=true
#
## Set the DatePattern
#log4j.appender.FILE.DatePattern='.' yyyy-MM-dd-a
#
## Define the layout for file appender
#log4j.appender.FILE.layout=org.apache.log4j.PatternLayout
#log4j.appender.FILE.layout.conversionPattern=%m%n
